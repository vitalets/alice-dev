{"version":3,"sources":["webpack:///./src/frontend/components/Form/FixedResponse/Editor.jsx"],"names":["Editor","React","Component","componentDidMount","options","mode","search","mainMenuBar","navigationBar","statusBar","colorPicker","onChange","this","handleChange","jsoneditor","JSONEditor","container","set","props","json","focus","tryGetCurrentJson","componentWillUnmount","destroy","shouldComponentUpdate","nextProps","JSON","stringify","componentDidUpdate","update","render","id","className","ref","elem","get","e"],"mappings":";0FAAA,wFAGe,MAAMA,UAAeC,EAAMC,UACxCC,oBACE,MAAMC,EAAU,CACdC,KAAM,OACNC,QAAQ,EACRC,aAAa,EACbC,eAAe,EACfC,WAAW,EACXC,aAAa,EAEbC,SAAU,IAAMC,KAAKC,gBAGvBD,KAAKE,WAAa,IAAIC,IAAWH,KAAKI,UAAWZ,GACjDQ,KAAKE,WAAWG,IAAIL,KAAKM,MAAMC,MAC/BP,KAAKE,WAAWM,QAGlBP,eACE,MAAMM,EAAOP,KAAKS,oBACdF,GACFP,KAAKM,MAAMP,SAASQ,GAIxBG,uBACMV,KAAKE,YACPF,KAAKE,WAAWS,UAIpBC,sBAAsBC,GACpB,OAAOC,KAAKC,UAAUF,EAAUN,QAAUO,KAAKC,UAAUf,KAAKS,qBAGhEO,qBACEhB,KAAKE,WAAWe,OAAOjB,KAAKM,MAAMC,MAGpCW,SACE,OACE,uBAAKC,GAAG,wBAAwBC,UAAU,6BAA6BC,IAAKC,GAAQtB,KAAKI,UAAYkB,IAIzGb,oBACE,IACE,OAAOT,KAAKE,WAAWqB,MACvB,MAAOC,Q","file":"FixedResponseEditor.bundle.js","sourcesContent":["import JSONEditor from 'jsoneditor';\nimport 'jsoneditor/dist/jsoneditor.css';\n\nexport default class Editor extends React.Component {\n  componentDidMount () {\n    const options = {\n      mode: 'code',\n      search: false,\n      mainMenuBar: false,\n      navigationBar: false,\n      statusBar: false,\n      colorPicker: false,\n      // Option \"onChangeJSON\" is not applicable to modes \"text\" and \"code\".\n      onChange: () => this.handleChange(),\n    };\n\n    this.jsoneditor = new JSONEditor(this.container, options);\n    this.jsoneditor.set(this.props.json);\n    this.jsoneditor.focus();\n  }\n\n  handleChange() {\n    const json = this.tryGetCurrentJson();\n    if (json) {\n      this.props.onChange(json);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.jsoneditor) {\n      this.jsoneditor.destroy();\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return JSON.stringify(nextProps.json) !== JSON.stringify(this.tryGetCurrentJson());\n  }\n\n  componentDidUpdate() {\n    this.jsoneditor.update(this.props.json);\n  }\n\n  render() {\n    return (\n      <div id=\"fixed-response-editor\" className=\"jsoneditor-react-container\" ref={elem => this.container = elem} />\n    );\n  }\n\n  tryGetCurrentJson() {\n    try {\n      return this.jsoneditor.get();\n    } catch (e) {\n      // invalid json\n    }\n  }\n}\n"],"sourceRoot":""}